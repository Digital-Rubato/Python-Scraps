'''
#this does not work
#needs a list "this": ["that", "the other"]
dic = {
	"this": "that", "the other"
}

print(dic)

x = dic.items()

print(x)
'''
'''
#this works, this prints as ['this': ['that', 'the other']}
#dic.items() prints as dict_items([('this', ['that', 'the other'])])
dic = {
	"this": ["that", "the other"]
}
print(dic)

x = dic.items()

print(x)
'''
states = {
	'Oregon': 'OR',
	'Florida': 'FL',
	'California': 'CA',
	'New York': 'NY',
	'Michigan': 'MI'
}
'''
for state, abbrev in list(states.items()):
	print(state)
	print(abbrev)
#prints all items within the 'states' dictionary: Oregon /n OR /n Florida /n FL etc. etc. etc.
'''
'''
for state in list(states.items()):
	print(state)
#prints items within the 'states' dictionary: ('Oregon', 'OR') /n ('Florida', 'FL')6 
'''
'''
for state, location, age in list(states.items()):
	print(state)
	print(location)
	print(age)
#obviously this doesnt work 'obviously' b/c of the additional variable 
'''
'''
#dictionary to add function
def add_values_in_dict(sample_dict, key, list_of_values):
	if key not in sample_dict:
		sample_dict[key] = list()
	sample_dict[key].extend(list_of_values)
	return sample_dict
#I dont know what it is, but i cannot make, append or extend,to work when it comes to lists or in this case dicts

states = add_values_in_dict(states, 'Oregon', ['this','then', 'that'])
print(states)

#Traceback (most recent call last):
  File "D:\Visual_Basic_Projects_Scripts\Python\HardWayTextPowerShell\lpthw\dicitems.txt", line 58, in <module>
    states = add_values_in_dict(states, 'Oregon', ['this','then', 'that'])
  File "D:\Visual_Basic_Projects_Scripts\Python\HardWayTextPowerShell\lpthw\dicitems.txt", line 55, in add_values_in_dict
    sample_dict[key].append(list_of_values)
AttributeError: 'str' object has no attribute 'append'

#the above also applies to extend with just this minor change
sample_dict[key].extend(list_of_values)
AttributeError: 'str' object has no attribute 'extend'
'''
#Ordereddict() - a dictionary subclass, that remembers the order that keys were first inserted.
#items inserted, then removed, then re added come last. 1,2,3 > 1, 3 > 1, 3, 2